<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mimi.mapper.ProductInfoMapper" >
  <resultMap id="BaseResultMap" type="com.mimi.pojo.ProductInfo" >
    <id column="p_id" property="pId" jdbcType="INTEGER" />
    <result column="p_name" property="pName" jdbcType="VARCHAR" />
    <result column="p_content" property="pContent" jdbcType="VARCHAR" />
    <result column="p_price" property="pPrice" jdbcType="INTEGER" />
    <result column="p_image" property="pImage" jdbcType="VARCHAR" />
    <result column="p_number" property="pNumber" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="p_date" property="pDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    p_id, p_name, p_content, p_price, p_image, p_number, type_id, p_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mimi.pojo.ProductInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product_info
    where p_id = #{pId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product_info
    where p_id = #{pId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mimi.pojo.ProductInfoExample" >
    delete from product_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mimi.pojo.ProductInfo" >
    insert into product_info (p_id, p_name, p_content, 
      p_price, p_image, p_number, 
      type_id, p_date)
    values (#{pId,jdbcType=INTEGER}, #{pName,jdbcType=VARCHAR}, #{pContent,jdbcType=VARCHAR}, 
      #{pPrice,jdbcType=INTEGER}, #{pImage,jdbcType=VARCHAR}, #{pNumber,jdbcType=INTEGER}, 
      #{typeId,jdbcType=INTEGER}, #{pDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.mimi.pojo.ProductInfo" >
    insert into product_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pId != null" >
        p_id,
      </if>
      <if test="pName != null" >
        p_name,
      </if>
      <if test="pContent != null" >
        p_content,
      </if>
      <if test="pPrice != null" >
        p_price,
      </if>
      <if test="pImage != null" >
        p_image,
      </if>
      <if test="pNumber != null" >
        p_number,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="pDate != null" >
        p_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pId != null" >
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="pName != null" >
        #{pName,jdbcType=VARCHAR},
      </if>
      <if test="pContent != null" >
        #{pContent,jdbcType=VARCHAR},
      </if>
      <if test="pPrice != null" >
        #{pPrice,jdbcType=INTEGER},
      </if>
      <if test="pImage != null" >
        #{pImage,jdbcType=VARCHAR},
      </if>
      <if test="pNumber != null" >
        #{pNumber,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="pDate != null" >
        #{pDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mimi.pojo.ProductInfoExample" resultType="java.lang.Integer" >
    select count(*) from product_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product_info
    <set >
      <if test="record.pId != null" >
        p_id = #{record.pId,jdbcType=INTEGER},
      </if>
      <if test="record.pName != null" >
        p_name = #{record.pName,jdbcType=VARCHAR},
      </if>
      <if test="record.pContent != null" >
        p_content = #{record.pContent,jdbcType=VARCHAR},
      </if>
      <if test="record.pPrice != null" >
        p_price = #{record.pPrice,jdbcType=INTEGER},
      </if>
      <if test="record.pImage != null" >
        p_image = #{record.pImage,jdbcType=VARCHAR},
      </if>
      <if test="record.pNumber != null" >
        p_number = #{record.pNumber,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.pDate != null" >
        p_date = #{record.pDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product_info
    set p_id = #{record.pId,jdbcType=INTEGER},
      p_name = #{record.pName,jdbcType=VARCHAR},
      p_content = #{record.pContent,jdbcType=VARCHAR},
      p_price = #{record.pPrice,jdbcType=INTEGER},
      p_image = #{record.pImage,jdbcType=VARCHAR},
      p_number = #{record.pNumber,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      p_date = #{record.pDate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mimi.pojo.ProductInfo" >
    update product_info
    <set >
      <if test="pName != null" >
        p_name = #{pName,jdbcType=VARCHAR},
      </if>
      <if test="pContent != null" >
        p_content = #{pContent,jdbcType=VARCHAR},
      </if>
      <if test="pPrice != null" >
        p_price = #{pPrice,jdbcType=INTEGER},
      </if>
      <if test="pImage != null" >
        p_image = #{pImage,jdbcType=VARCHAR},
      </if>
      <if test="pNumber != null" >
        p_number = #{pNumber,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="pDate != null" >
        p_date = #{pDate,jdbcType=DATE},
      </if>
    </set>
    where p_id = #{pId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mimi.pojo.ProductInfo" >
    update product_info
    set p_name = #{pName,jdbcType=VARCHAR},
      p_content = #{pContent,jdbcType=VARCHAR},
      p_price = #{pPrice,jdbcType=INTEGER},
      p_image = #{pImage,jdbcType=VARCHAR},
      p_number = #{pNumber,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      p_date = #{pDate,jdbcType=DATE}
    where p_id = #{pId,jdbcType=INTEGER}
  </update>
<!--  批量删除-->
  <delete id="deleteBatch" >
    delete from product_info where p_id in
    <foreach collection="array" item="pid" separator="," open="(" close=")">
      #{pid}
    </foreach>
  </delete>
<!--  多条件查询-->
<!--  id的值与mapper接口中的函数名一致-->
  <select id="selectCondition" parameterType="com.mimi.pojo.vo.ProductInfoVo" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include>
    from product_info
    <!--拼接条件-->
    <where>
      <!--商品名称不为空，拼接商品名称进行模糊查询。下同。-->
      <!--p_name是数据库字段名，productName是vo类中的变量名-->
      <if test="productName != null and productName != ''">
        and p_name like '%${productName}%'
      </if>
      <if test="productType != null and productType != -1">
        and type_id = #{productType}
      </if>
      <if test="(lowPrice != null and lowPrice != '') and (highPrice == null or highPrice == '')">
        and p_price &gt;= #{lowPrice}
      </if>
      <if test="(highPrice != null and highPrice != '') and (lowPrice == null or lowPrice == '')">
        and p_price &lt;= #{highPrice}
      </if>
      <if test="(highPrice != null and highPrice != '') and (highPrice != null and highPrice != '')">
        and p_price between #{lowPrice} and #{highPrice}
      </if>
    </where>
      order by p_id desc
  </select>
</mapper>